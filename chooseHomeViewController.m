////  chooseHomeViewController.m//  security2.0////  Created by liuhuangshuzz on 3/31/16.//  Copyright © 2016 com.letianxia. All rights reserved.//#import "chooseHomeViewController.h"#import "UIViewController+MBProgressHUD.h"#import "UIViewController+BackBtn.h"#import "ChooseHomeCell.h"#import "chooseHomeData.h"#import "addButton.h"#import "AddHouseVC.h"#import "prefrenceHeader.h"#import "DisConnectedBtn.h"#import "SetHomeViewController.h"#import "MBProgressHUD.h"#import "CamObj.h"#import "SvUDIDTools.h"#import "HouseModelHandle.h"#import "HouseModel.h"#import "Reachability.h"const CGFloat kCellCornerRadius = 5;@interface chooseHomeViewController ()<chooseHomeCellDelegate,AddHouseVCDelegate>@property(nonatomic,strong)ChooseHomeCell *selectedCell;@end@implementation chooseHomeViewController-(void)createModels{    self.dataList = [NSMutableArray arrayWithArray:[HouseModelHandle shareHouseHandle].houses];}- (void)viewDidLoad {    [super viewDidLoad];        [self addBackBtn:NSLocalizedString(@"Pair home", nil)];        self.navigationItem.rightBarButtonItem = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemAdd target:self action:@selector(addNewRoom)];}#pragma mark - choosecelldelegate-(void)setHomeWithCell:(ChooseHomeCell *)cell{    NSIndexPath *index = [self.tableView indexPathForCell:cell];        SetHomeViewController *home = [[SetHomeViewController alloc] initWithIndex:index];      self.hidesBottomBarWhenPushed = YES;    [self.navigationController pushViewController:home animated:YES];}-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{    return (kSelfViewWidth-2*0)*0.406;}#pragma mark - talbeView的代理方法-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{    ChooseHomeCell *cell = [tableView dequeueReusableCellWithIdentifier:@"reuseID"];            if([HouseModelHandle shareHouseHandle].houses >0){                HouseModel * houseModel = [HouseModelHandle shareHouseHandle].houses[indexPath.section];        HouseModel * currentHOuse = [HouseModelHandle shareHouseHandle].currentHouse;                cell.textLabel.text = houseModel.name;        [cell refreshUIWithModel:houseModel];                if ([houseModel.address isEqualToString:currentHOuse.address]) {            [cell refreshWithSelectFlag:YES];            self.selectedCell = cell;        } else {                        [cell refreshWithSelectFlag:NO];        }    }    cell.delegate = self;        return cell;}-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{    ChooseHomeCell *cell = [tableView cellForRowAtIndexPath:indexPath];        HouseModel * houseModel = [HouseModelHandle shareHouseHandle].houses[indexPath.section];               MYLog(@"house model adress %@",houseModel.address);                 if (cell != self.selectedCell) {                [self refreshSelectedCell:cell];                //设置当前House        [[HouseModelHandle shareHouseHandle] setCurrentHouse:houseModel];        //清空数据        [[fileOperation sharedOperation] clearList];                if (self.wifiReachability.currentReachabilityStatus == NotReachable) {                        [self showWithTime:hubAnimationTime title:NSLocalizedString(@"Network_Interruption", nil)];                    }else{            //改变房子            [self changeHomeConnect:cell houseModel:houseModel];        }            } else {                if (self.wifiReachability.currentReachabilityStatus == NotReachable) {                        [self showWithTime:hubAnimationTime title:NSLocalizedString(@"Network_Interruption", nil)];                    }else{                        //连接房子            [self reconnectHouse:houseModel];        }    }       }#pragma mark - 界面创建及更新-(void )refreshSelectedCell:(ChooseHomeCell *)cell{    //将之前选中的cell设置为NO 将cell设置为选中状态    [self.selectedCell refreshWithSelectFlag:NO];    [cell refreshWithSelectFlag:YES];    self.selectedCell = cell;}#pragma mark - 连接房子//连接房子-(void )reconnectHouse:(HouseModel *)houseModel{    //如果选中cell为已经选中的cell 如果未连接 则连接    if ([P2Phandle shareP2PHandle].linkState == P2PLinkUnConnnected) {                dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{                        // 这个方法会卡主线程            int nRet = [[P2Phandle shareP2PHandle] connectWithTimeout:10 nsDID:houseModel.address nsCamName:houseModel.name];                        [self showHubViewWithResult:nRet];                    });    } else if ([P2Phandle shareP2PHandle].linkState == P2PLinkConnnected) {                [self showWithTime:hubAnimationTime title:NSLocalizedString(@"House_Connected", nil)];            } else {        //再否则        [self showWithTime:hubAnimationTime title:NSLocalizedString(@"Connecting", nil)];            }    }// 更换房子-(void )changeHomeConnect:(ChooseHomeCell *)cell houseModel:(HouseModel *)houseModel{    //if ([P2Phandle shareP2PHandle].linkState != P2PLinkUnConnnected) {    //将之前的连接取消    [[P2Phandle shareP2PHandle] disConnect];        //}    //重新初始化cameraObject    [CamObj deinitAPI];        [CamObj initAPI];        //发送房间 更新的通知    //[[NSNotificationCenter defaultCenter] postNotificationName:kNotification_homeChanged object:nil];          //异步操作 根据ID name 连接p2p    dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{                int nRet = [[P2Phandle shareP2PHandle] connectWithTimeout:10 nsDID:houseModel.address nsCamName:houseModel.name];                [self showHubViewWithResult:nRet];    });}-(void )showHubViewWithResult:(int )nRet{    if (nRet == -1) {                [self failedAlarms];            } else if (nRet < 0) {                [self failedAlarms];            }else {                [self showWithTime:hubAnimationTime title:NSLocalizedString(@"Connected_Succ", nil)];            }}-(void )failedAlarms{    dispatch_async(dispatch_get_main_queue(), ^{                DisConnectedBtn * btn = [DisConnectedBtn disConnectedBtn];                [btn setAlarms:NSLocalizedString(@"Connected_Unsuccessfully", nil)];   });   }#pragma mark - 添加房子-(void )AddHouseComplished{    // 跟新tableView    [self.view.subviews enumerateObjectsUsingBlock:^(__kindof UIView * _Nonnull obj, NSUInteger idx, BOOL * _Nonnull stop) {        if ([obj isKindOfClass:[UITableView class]]) {            UITableView * tableView = obj;            [self createModels];            [tableView reloadData];        }    }];        NSIndexPath *indexPath =[NSIndexPath indexPathForRow:0 inSection:self.dataList.count - 1];        ChooseHomeCell *cell = [self.tableView cellForRowAtIndexPath:indexPath];        HouseModel * houseModel = [HouseModelHandle shareHouseHandle].houses[indexPath.section];            [self refreshSelectedCell:cell];        //清空数据    [[fileOperation sharedOperation] clearList];        if (self.wifiReachability.currentReachabilityStatus == NotReachable) {                [self showWithTime:hubAnimationTime title:NSLocalizedString(@"Network_Interruption", nil)];            }else{        //改变房子        [self changeHomeConnect:cell houseModel:houseModel];    }    }-(void)addNewRoom{    self.hidesBottomBarWhenPushed = YES;        AddHouseVC *add = [[AddHouseVC alloc] init];    add.delegate = self;        [self.navigationController pushViewController:add animated:YES ];}#pragma mark -生命周期- (void)viewWillAppear:(BOOL)animated {    [super viewWillAppear:animated];    //视图出现 更新tableView    [self.view.subviews enumerateObjectsUsingBlock:^(__kindof UIView * _Nonnull obj, NSUInteger idx, BOOL * _Nonnull stop) {        if ([obj isKindOfClass:[UITableView class]]) {            UITableView * tableView = obj;            [self createModels];            [tableView reloadData];        }    }];}@end