////  cameraViewController.m//  security2.0////  Created by Sen5 on 16/3/24.//  Copyright © 2016年 com.letianxia. All rights reserved.//#import "cameraViewController.h"#import "cameraCell.h"#import "cameraModel.h"#import "IPCClientNetLib.h"#import "StreamPlayLib.h"#import "ViewController.h"#import "UIViewController+MBProgressHUD.h"#import "AppDelegate.h"#import "UIDevice+orientation.h"#import "GTMBase64.h"#import "prefrenceHeader.h"#import "fileOperation.h"#import "DeviceModel.h"#import "ROVedioPlayController.h"#define kMargin 5#define kCellHeight 200#define kCellSpace 30@interface cameraViewController ()@property(nonatomic,strong) NSMutableArray *dataList;@property(nonatomic,strong) UIScrollView *scroll;@end@implementation cameraViewController- (instancetype)init{    self = [super init];    if (self) {                 [self addNotifications];    }    return self;}#pragma mark - create UI-(void )viewDidLoad{    [super viewDidLoad];        self.view.backgroundColor = [UIColor whiteColor];      self.navigationItem.leftBarButtonItem = [[UIBarButtonItem alloc]initWithTitle:NSLocalizedString(@"Camera", nil) style:UIBarButtonItemStylePlain target:self action:nil];        [self creatModels];        [self createUI];    }#pragma mark - notifications-(void )addNotifications{    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(applicationDidEnterBackground:) name:UIApplicationDidEnterBackgroundNotification object:nil];        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(applicationWillEnterForeground:) name:UIApplicationWillEnterForegroundNotification object:nil];        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(cameraMayChanged:) name:kNotification_deviceListUpdated object:nil];       // [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(cameraMayChanged) name:KNotificationFullPlayImageViewDidDisApprearance object:nil];        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(StopPlaying:) name:kNotification_FullScreenPlay object:nil];    }- (void)dealloc{    [[NSNotificationCenter defaultCenter] removeObserver:self];}#pragma mark - crate models-(void )creatModels{    self.dataList = nil;    self.dataList = [NSMutableArray arrayWithArray:[[fileOperation sharedOperation] getCameras]];}#pragma mark - create UI-(void )createUI{    UIScrollView *scroll = [[UIScrollView alloc] initWithFrame:self.view.bounds];        scroll.contentSize = CGSizeMake(kScreenWidth-2*kMargin, (kScreenWidth-2*kMargin+kCellSpace)*0.618*(self.dataList.count+1) +kCellSpace);        scroll.backgroundColor = [UIColor whiteColor];     scroll.scrollEnabled = YES;    _scroll = scroll;        [self.view addSubview:scroll];    // add camera        [self addChildController];    }-(void )refreshUI{    [self showWithTime:1 title:NSLocalizedString(@"camera_Changed", nil)];    for (id camera in self.childViewControllers) {                if ([camera isKindOfClass:NSClassFromString(@"ROVedioPlayController")]) {            [camera btnStop];            [[(ViewController *)camera view] removeFromSuperview];            [camera removeFromParentViewController];        }    }        for (id camera in self.view.subviews) {        if ([camera isKindOfClass:NSClassFromString(@"UIScrollView")]) {            [camera removeFromSuperview];        }    }    [self creatModels];        [self createUI];}-(void )addChildController{    for (NSInteger i = 0; i<self.dataList.count; i++) {        DeviceModel *camera = self.dataList[i];        if ([camera.name isEqualToString:@"IP Camera"]) {            camera.name = [NSString stringWithFormat:@"IP Camera %ld",i];        }                ROVedioPlayController *vedio = [[ROVedioPlayController alloc ]initWithDev_id:self.dataList[i] isFullScreen:NO];              //  ViewController *cam_view = [[ViewController alloc] initWithDev_id:self.dataList[i] isFullScreen:NO];                [self addChildViewController:vedio];                vedio.view.frame = CGRectMake(kMargin, ((kSelfViewWidth-2*kMargin)+kCellSpace)*0.618*i, kSelfViewWidth-2*kMargin, (kSelfViewWidth-2*kMargin)*0.618);                [_scroll addSubview:vedio.view];    }    }#pragma mark - 通知中心-(void )cameraMayChanged:(NSNotification *)notice{    dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{              __block  BOOL cameraChange = NO;                NSArray *array = [[fileOperation sharedOperation ] getCameras];                if (array.count != 0) {                    [array enumerateObjectsUsingBlock:^(id  _Nonnull obj, NSUInteger idx, BOOL * _Nonnull stop) {                     BOOL cameraChange_ = YES;                     for (DeviceModel *dev in self.dataList) {                if (dev.dev_id == [(DeviceModel *)obj dev_id]) {                    cameraChange_ = NO;                    break;                }            }            //有cameraChange为yes则表示camera发生改变， 则更新视图            cameraChange = cameraChange_;                     if (cameraChange) {                *stop = YES;            }        }];        }else        {            cameraChange = YES;        }                        if (cameraChange) {                         dispatch_async(dispatch_get_main_queue(), ^{                               [self refreshUI];             });        }            });    }-(void )StopPlaying:(NSNotification *)notice{    DeviceModel *dev = (DeviceModel *)notice.object;    for (id cam in self.childViewControllers) {        if ([cam isKindOfClass:NSClassFromString(@"ViewController")]) {            if ([[(ViewController *)cam camera] dev_id] != dev.dev_id) {               [cam stopBtnClick];            }                    }    }}#pragma mark - life circle -(void )applicationDidEnterBackground:(NSNotification *)notice{    for (id camera in self.childViewControllers) {        if ([camera isKindOfClass:NSClassFromString(@"ROVedioPlayController")]) {            [camera stopBtnClick];                  }    }}-(void )applicationWillEnterForeground:(NSNotification *)notice{}- (void)didReceiveMemoryWarning {    [super didReceiveMemoryWarning];    // Dispose of any resources that can be recreated.}@end