////  AddViewController.m//  security2.0////  Created by Sen5 on 16/3/30.//  Copyright © 2016年 com.letianxia. All rights reserved.//#import "AddViewController.h"#import "prefrenceHeader.h"#import "MBProgressHUD.h"#import "UIViewController+MBProgressHUD.h"#import "fileOperation.h"#import "NSString+Check.h"#import "DeviceModel.h"#import "roomsModel.h"#import "sceneModel.h"#import "changeCell.h"const CGFloat kCellHeigh = 64;const CGFloat kLeftCap = 15;@interface AddViewController ()<UIImagePickerControllerDelegate,UINavigationControllerDelegate,changeCellDelegate,UITextFieldDelegate>@end@implementation AddViewController{    NSIndexPath *_index;   }-(instancetype )initWithModel:(id )model{    self = [super init];    if (self) {        _mod = model;    }    return self;}- (void)viewDidLoad {    [super viewDidLoad];    self.view.backgroundColor = kLightBackgroudColor;    [self createDataList];        self.navigationItem.rightBarButtonItem = [[UIBarButtonItem alloc] initWithTitle:NSLocalizedString(@"Done", nil) style:UIBarButtonItemStylePlain target:self action:@selector(acthionDone)];      [self createTableViews];}-(void)createTableViews{    self.tableView = [[UITableView alloc]initWithFrame:CGRectMake(0, 20, kSelfViewWidth, kSelfViewHeight)];    self.tableView.dataSource = self;    self.tableView.delegate = self;        self.tableView.backgroundColor = kLightBackgroudColor;        self.tableView.separatorStyle = UITableViewCellSeparatorStyleSingleLine;        self.tableView.tableFooterView = [self tableFooterView];        [self.view addSubview:self.tableView];}#pragma mark - 数据源-(void)createDataList{    self.dataList = [[NSMutableArray alloc]init];    NSArray *titles = nil;    UIImage *img = nil;        switch (_kType) {        case kScene:{            titles = @[NSLocalizedString(@"Give_Scene_Name", nil),NSLocalizedString(@"Turn_On", nil),NSLocalizedString(@"Turn_Off", nil)];            img = [(sceneModel *)_mod scene_image];        }            break;        case kRoom:{                        titles = @[NSLocalizedString(@"Give_Room_Name", nil),NSLocalizedString(@"Add_Devices_To_Room", nil)];            img = [(roomsModel *)_mod room_image];        }            break;        case kDevice:{                        titles = @[NSLocalizedString(@"Give_Device_Name", nil),NSLocalizedString(@"Select_Room", nil)];            img = [UIImage imageNamed:[[fileOperation sharedOperation] getImageNameWithDevice_type:[(DeviceModel *)_mod dev_type] device_mode:[(DeviceModel *)_mod mode]][@"device"]];                NSLog(@"%@",[[fileOperation sharedOperation] getImageNameWithDevice_type:[(DeviceModel *)_mod dev_type] device_mode:[(DeviceModel *)_mod mode]][@"device"]);        }            break;                    default:#if 0        {            titles = @[NSLocalizedString(@"Give_Home_Name", nil)];            img = [UIImage imageNamed:@"ic_default_rooms_"];        }#endif            break;    }        NSMutableArray *data = [NSMutableArray array];        for (NSInteger i=0; i<titles.count; i++) {                AddData *mod = [[AddData alloc]init];        mod.title = titles[i];        mod.accessayType = kAccessayTypeAdd;        if (i == 0) {            mod.hasImage = YES;            mod.image = img;            mod.accessayType = kAccessayTypeNone;            if (_kType == kDevice) {                                mod.detail = [[fileOperation sharedOperation] getDeviceNameWithDevice_type:[_mod dev_type]];            }        }                [data addObject:mod];    }        NSDictionary *cellInfo = @{@"section":@"",@"item":data};        [self.dataList addObject:cellInfo];    }-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{    return 1;}- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {        return [self.dataList[section][@"item"] count];}-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{     AddData *data = self.dataList[indexPath.section][@"item"][indexPath.row];    if (data.hasImage) {                changeCell *cell = [self.tableView dequeueReusableCellWithIdentifier:@"reuse_change"];               if (cell == nil) {            cell = [[changeCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:@"reuse_change"];        }        cell.delegate = self;        cell.selectionStyle = UITableViewCellSelectionStyleNone;        _changeCell = cell;                [cell setRecommandWords:data.title];        [cell setIcan:data.image];                _text = cell.textField;        _text.delegate = self;                [self setStatusAndAttributes];                cell.backgroundColor = kLightBackgroudColor;        cell.tintColor = kDarkBackgroudColor;                return cell;            }else{                UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"reuseID"];                if (cell == nil) {            cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleSubtitle reuseIdentifier:@"reuseID"];        }                cell.selectionStyle = UITableViewCellSelectionStyleNone;        cell.textLabel.text = data.title;        cell.textLabel.font = [UIFont systemFontOfSize:13];        cell.textLabel.numberOfLines = 0;        cell.textLabel.textColor = kLightTitleColor;          UIButton *addBtn = [UIButton buttonWithType:UIButtonTypeContactAdd];        addBtn.tag = 100 +indexPath.row;        addBtn.tintColor = kMainGreenColor;        addBtn.frame = CGRectMake(0, 0, 30,30);        addBtn.center = CGPointMake(CGRectGetWidth(cell.frame)-30, CGRectGetMidY(cell.frame));        cell.accessoryView = addBtn;                [addBtn addTarget:self action:@selector(addBtnClick:) forControlEvents:UIControlEventTouchUpInside];        cell.backgroundColor = kLightBackgroudColor;        cell.tintColor = kDarkBackgroudColor;                return cell;    }    return nil;}-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{    return kCellHeigh;}#pragma mark - 点击事件-(void )tableView:(UITableView *)tableView accessoryButtonTappedForRowWithIndexPath:(NSIndexPath *)indexPath{}-(void )changeIcon{    UIAlertController *alert = [UIAlertController alertControllerWithTitle:@"changePhoto" message:nil preferredStyle:UIAlertControllerStyleActionSheet];        UIAlertAction *action1 = [UIAlertAction actionWithTitle:@"Default Photo..." style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {                [self changeIcon:nil];    }];       UIAlertAction *action2 = [UIAlertAction actionWithTitle:@"Take Photo..." style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {                if ([UIImagePickerController isSourceTypeAvailable:UIImagePickerControllerSourceTypeCamera]) {            UIImagePickerController *imagePickerController = [[UIImagePickerController alloc] init];            imagePickerController.delegate = self;            imagePickerController.allowsEditing = YES;            imagePickerController.sourceType = UIImagePickerControllerSourceTypeCamera;                        [self presentViewController:imagePickerController animated:YES completion:^{                            }];        }else        {            [self showWithTime:hubAnimationTime title:@"The Camera is not Avialabel"];        }            }];        UIAlertAction *action3 = [UIAlertAction actionWithTitle:@"choose Photo..." style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {                if ([UIImagePickerController isSourceTypeAvailable:UIImagePickerControllerSourceTypeSavedPhotosAlbum]) {            UIImagePickerController *imagePickerController = [[UIImagePickerController alloc] init];            imagePickerController.delegate = self;            imagePickerController.allowsEditing = YES;            imagePickerController.sourceType = UIImagePickerControllerSourceTypeSavedPhotosAlbum;                        [self presentViewController:imagePickerController animated:YES completion:^{                            }];        }else        {            [self showWithTime:hubAnimationTime title:@"The Camera is not Avialabel"];        }    }];        UIAlertAction *action4 = [UIAlertAction actionWithTitle:@"Cancel" style:UIAlertActionStyleCancel handler:^(UIAlertAction * _Nonnull action) {            }];        [alert addAction:action1];    [alert addAction:action2];    [alert addAction:action3];    [alert addAction:action4];        [self presentViewController:alert animated:YES completion:nil];}#pragma  - setup UI-(UIView *)tableFooterView{    if (_mod != nil) {            NSString *title = nil;    switch (_kType) {        case kScene:            title =  NSLocalizedString(@"Remove_Scene", nil);            break;        case kRoom:            title =  NSLocalizedString(@"Remove_Room", nil);            break;        case kDevice:            title =  NSLocalizedString(@"Remove_Device", nil);            break;                default:            break;    }        NSInteger count = [self.dataList[0][@"item"] count];            UIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, 0, kSelfViewWidth, kSelfViewHeight - (kCellHeigh*(count)))];            UIButton *btn = [UIButton buttonWithType:UIButtonTypeCustom];        [btn setTitle:title forState:UIControlStateNormal];        [btn setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];        [btn setBackgroundColor:kMainRedColor];        btn.frame = CGRectMake(0, 0,kSelfViewWidth-30, 40);        btn.center = CGPointMake(CGRectGetMidX(view.frame), CGRectGetMidY(view.frame));        btn.layer.cornerRadius = 5;        btn.clipsToBounds = YES;        [btn addTarget:self action:@selector(removeScene) forControlEvents:UIControlEventTouchUpInside];        [view addSubview:btn];            return view;    }else    {        return  [[UIView alloc] init];    }    }- (MBProgressHUD *)hubView {    if (!_hubView) {                if (self.view.window) {            MBProgressHUD * HUD = [[MBProgressHUD alloc] initWithView:self.view.window];            [self.view.window addSubview:HUD];            [HUD hide:YES];            _hubView = HUD;        }    }    return _hubView;}#pragma mark - 删除scene device room-(void )removeScene{    NSString *title = nil;        switch (_kType) {        case kDevice:            title = NSLocalizedString(@"Device_Removed", nil);            break;        case kRoom:            title = NSLocalizedString(@"Room_Deleted", nil);            break;        case kScene:            title = NSLocalizedString(@"Scene_Will_Delete", nil);            break;                    default:            break;    }        if ([[P2Phandle shareP2PHandle] linkState] == P2PLinkConnnected) {                UIAlertController *alert = [UIAlertController alertControllerWithTitle:nil message:title preferredStyle:UIAlertControllerStyleActionSheet];                UIAlertAction *act2 = [UIAlertAction actionWithTitle:NSLocalizedString(@"Sure", nil) style:UIAlertActionStyleDestructive handler:^(UIAlertAction * _Nonnull action) {            [self.hubView show:YES];            [self.hubView hide:YES afterDelay:HubViewDelayTime];                        [self remove];        }];                UIAlertAction *act1 = [UIAlertAction actionWithTitle:NSLocalizedString(@"Not_Sure", nil) style:UIAlertActionStyleCancel handler:^(UIAlertAction * _Nonnull action) {                    }];                [alert addAction:act1];        [alert addAction:act2];                [self presentViewController:alert animated:YES completion:^{                    }];            }else    {        [self showWithTime:hubAnimationTime title:kConnectedFailed];    }    }-(void )remove{    switch (_kType) {        case kDevice:            [[P2Phandle shareP2PHandle] deleteDevicewithDeviceID:[self.mod dev_id] tableID:[self.mod table_id]];            break;        case kRoom:            [[P2Phandle shareP2PHandle] deleteRoomWithRoomID:[self.mod room_id]];            break;        case kScene:            [[P2Phandle shareP2PHandle] deleSceneWithSceneID:[self.mod scene_id]];            break;                    default:            break;    }            }#pragma mark  - textFieldDelegate- (BOOL)textFieldShouldReturn:(UITextField *)textField{    if ([self.text canResignFirstResponder]) {        [self.text resignFirstResponder];    }    return YES;}#pragma mark - UIImagePickerControllerDelegate-(void )imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary<NSString *,id> *)info{    [picker dismissViewControllerAnimated:YES completion:^{            }];        UIImage *image = [info objectForKey:UIImagePickerControllerOriginalImage];       [self changeIcon:image];}-(void )setStatusAndAttributes{}-(void )acthionDone{    if (![self.text.text isBlank]) {        [self acthionHaveDone];    }else    {        //格式有问题 显示hub        [self showWithTime:hubAnimationTime title:NSLocalizedString(@"Name_Nil", nil)];    }}-(void )acthionHaveDone{}-(void )changeIcon:(UIImage *)image{    [_changeCell setIcan:image];    }-(void)imagePickerControllerDidCancel:(UIImagePickerController *)picker{    [picker dismissViewControllerAnimated:YES completion:^{            }];    }#pragma mark -  生命周期-(void)viewDidAppear:(BOOL)animated{    [self.hubView hide:NO];}-(void)addBtnClick:(UIButton *)btn{    }- (void)didReceiveMemoryWarning {    [super didReceiveMemoryWarning];    }@end